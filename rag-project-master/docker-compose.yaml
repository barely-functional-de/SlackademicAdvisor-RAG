services:
  magic-platform:
    env_file:
      - .env
    build:
      context: .
    # command: /bin/sh -c "/app/run_app.sh"
    command: /app/run_app.sh mage start $PROJECT_NAME
    ports:
      - "6789:6789"
    volumes:
      # Mount your local codebase to the container.
      - .:/$MAGE_CODE_PATH
      # Store the data output on local machine to easily debug (optional).
      - ~/.mage_data:/$MAGE_CODE_PATH/mage_data
    restart: on-failure:5
    networks:
      - app-network
    depends_on:
      - magic-database
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging

  magic-database:
    image: pgvector/pgvector:0.6.0-pg16
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ~/.postgres/data:/var/lib/postgresql/data
      # Custom database initialization scripts (optional).
      - ./scripts/database:/docker-entrypoint-initdb.d
    restart: on-failure:5
    networks:
      - app-network
  
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: faq0818@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_password
    ports:
      - "8080:80"
    depends_on:
      - magic-database
    networks:
      - app-network

  ollama:
    image: ollama/ollama
    container_name: ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    networks:
      - app-network
  
  # postgres:
  #   image: postgres:13
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   ports:
  #     - "${POSTGRES_PORT:-5432}:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: on-failure:5
    networks:
      - app-network

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - ELASTIC_URL=http://elasticsearch:${ELASTIC_PORT:-9200}
      - OLLAMA_URL=http://ollama:${OLLAMA_PORT:-11434}/v1/
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MODEL_NAME=${MODEL_NAME}
      - INDEX_NAME=${INDEX_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    depends_on:
      - elasticsearch
      - ollama
      - magic-database
      - magic-platform
    volumes:
      - .:/app
    command: /bin/bash -c "pip install --upgrade -r /app/llm/requirements.txt && streamlit run ${MAGE_CODE_PATH}/llm/streamlit_app/streamlit_app.py"
    # command: /bin/bash -c "pip install --upgrade openai==1.42.0 && streamlit run ${MAGE_CODE_PATH}/llm/streamlit_app/streamlit_app.py"
    # command: ["streamlit", "run", "${MAGE_CODE_PATH}/llm/streamlit_app/streamlit_app.py"]
    networks:
      - app-network

volumes:
  elasticsearch_data:
  ollama_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
